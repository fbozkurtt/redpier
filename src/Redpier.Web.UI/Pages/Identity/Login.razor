@page "/login"
@layout EmptyLayout
@inject ILocalStorageService localStorage

<div class="box" style="background-color: #fff0f0">
    <div class="center row align-items-center">
        <div class="container">
            <div id="login-row" class="row justify-content-center align-items-center">
                <div id="login-column" class="col-md-6">
                    <div id="login-box" class="col-md-12">
                        <h3 class="text-center">Login</h3>
                        <EditForm Model="@model" id="login-form" class="form" OnValidSubmit="@HandleValidSubmit">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="form-group">
                                <label for="username">Username:</label><br>
                                <input @bind-value="model.Username" type="text" name="username" id="username" class="form-control" required>
                            </div>
                            <div class="form-group">
                                <label for="password">Password:</label><br>
                                <input @bind-value="model.Password" type="password" name="password" id="password" class="form-control" required>
                            </div>
                            <div class="form-group text-center">
                                <button type="submit" class="btn btn-primary btn-md">Login or register</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code{
    [Inject]
    public HttpClient Client { get; set; }

    private LoginModel model = new LoginModel();

    private async void HandleValidSubmit()
    {
        var response = await Client.PostAsJsonAsync("/api/Identity", model);

        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadFromJsonAsync<string>();
            await localStorage.SetItemAsync("JWT", token);
        }
        else
        {
            Console.WriteLine("Login failed!");
        }
    }
}