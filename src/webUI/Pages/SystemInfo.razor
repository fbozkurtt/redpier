@page "/system"
@using Docker.DotNet.Models
@inherits BaseComponent

<div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12 table-responsive">
        <table class="table table-sm">
            <thead class="thead-light">
                <tr>
                    <th scope="col" style="width: 30%">System Info</th>
                    <th scope="col" style="width: 70%"></th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    <tr>
                        <td>Hostname</td>
                        <td>@Model.Name</td>
                    </tr>
                    <tr>
                        <td>OS</td>
                        <td>@Model.OSType @Model.Architecture @Model.OperatingSystem</td>
                    </tr>
                    <tr>
                        <td>Kernel</td>
                        <td>@Model.KernelVersion</td>
                    </tr>
                    <tr>
                        <td>
                            <span class="fa fa-microchip"></span>
                            CPU Cores
                        </td>
                        <td>@Model.NCPU</td>
                    </tr>
                    <tr>
                        <td>
                            <span class="fa fa-memory"></span>
                            Memory
                        </td>
                        <td>@(Model.MemTotal / 1000000) MB</td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td colspan="2">
                            <div class="text-center">
                                <div class="spinner-border spinner-border-sm" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12 table-responsive">
        <table class="table table-sm">
            <thead class="thead-light">
                <tr>
                    <th scope="col" style="width: 30%">Docker Info</th>
                    <th scope="col" style="width: 70%"></th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    <tr>
                        <td>Version</td>
                        <td>@Model.ServerVersion</td>
                    </tr>
                    <tr>
                        <td>Root directory</td>
                        <td>@Model.DockerRootDir</td>
                    </tr>
                    <tr>
                        <td>Storage Driver</td>
                        <td>@Model.Driver</td>
                    </tr>
                    <tr>
                        <td>Logging Driver</td>
                        <td>@Model.LoggingDriver</td>
                    </tr>
                    <tr>
                        <td>Volume Plugins</td>
                        <td>@Model.Plugins.Volume.Aggregate((a, b) => a + " " + b)</td>
                    </tr>
                    <tr>
                        <td>Network Plugins</td>
                        <td>@Model.Plugins.Network.Aggregate((a, b) => a + " " + b)</td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td colspan="2">
                            <div class="text-center">
                                <div class="spinner-border spinner-border-sm" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code{
    [Inject]
    public IEndpointService EndpointService { get; set; }

    private SystemInfoResponse Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await FetchData();
        PageLoaded = true;
    }
    public async Task FetchData()
    {
        Model = await EndpointService.GetSystemInfoAsync();
    }
}