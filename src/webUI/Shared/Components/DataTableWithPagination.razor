@typeparam TItem

<div class="table-responsive py-2">
    <table class="table table-hover @(IsSmallTable ? "table-sm" : "")">
        <thead class="thead-light">
            <tr>
                <th><input type="checkbox" checked="@SelectedItems.Any()" @onclick="SelectAllAsync" disabled="@IsBusy" /></th>
                @TableHeader
            </tr>
        </thead>
        <tbody>
            @if (Page != null && Page.TotalCount > 0)
            {
                @foreach (var item in Page.Items)
                {
                    <tr>
                        <td>
                            <input type="checkbox" checked="@SelectedItems.Contains(item)" @onclick="e => SelectAsync(item)" disabled="@IsBusy" />
                        </td>
                        @TableRow(item)
                    </tr>
                }
            }
            else if (IsBusy)
            {
                <tr>
                    <td colspan="@ColSpan">
                        <div class="text-center">
                            <div class="spinner-border spinner-border-sm" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    </td>
                </tr>
            }
            else if (Page == null || Page.Items.Count == 0)
            {
                <tr>
                    <td colspan="@ColSpan" class="text-center">No data</td>
                </tr>
            }
        </tbody>
    </table>
</div>
@if (Page != null && Page.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-end">
            <li class="page-item @(Page.HasPreviousPage ? "" : "disabled")">
                <a class="page-link" tabindex="-1" @onclick="e => SetPageAsync(Page.PageIndex - 1)">Previous</a>
            </li>
            @if (Page.HasPreviousPage)
            {
                <li class="page-item"><a class="page-link" @onclick="e => SetPageAsync(Page.PageIndex - 1)">@(Page.PageIndex - 1)</a></li>
            }
            <li class="page-item"><a class="page-link active disabled">@Page.PageIndex</a></li>
            @if (Page.HasNextPage)
            {
                <li class="page-item"><a class="page-link" @onclick="e => SetPageAsync(Page.PageIndex + 1)">@(Page.PageIndex + 1)</a></li>
            }
            <li class="page-item @(Page.HasNextPage ? "" : "disabled")">
                <a class="page-link" @onclick="e => SetPageAsync(Page.PageIndex + 1)">Next</a>
            </li>
        </ul>
    </nav>
}